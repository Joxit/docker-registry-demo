{"architecture":"amd64","config":{"ExposedPorts":{"80/tcp":{}},"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.19.10","NJS_VERSION=0.5.3","PKG_RELEASE=1","NGINX_PROXY_HEADER_Host=$http_host"],"Entrypoint":["/docker-entrypoint.sh"],"Cmd":["nginx","-g","daemon off;"],"WorkingDir":"/usr/share/nginx/html/","Labels":{"maintainer":"Jones MAGLOIRE @Joxit"},"StopSignal":"SIGQUIT","OnBuild":null},"created":"2021-05-11T08:20:42.989335066Z","history":[{"created":"2021-04-14T19:19:39.267885491Z","created_by":"/bin/sh -c #(nop) ADD file:8ec69d882e7f29f0652d537557160e638168550f738d0d49f90a7ef96bf31787 in / "},{"created":"2021-04-14T19:19:39.643236135Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2021-04-14T23:14:29.217479283Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","empty_layer":true},{"created":"2021-04-14T23:14:29.402396209Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_VERSION=1.19.10","empty_layer":true},{"created":"2021-04-14T23:14:29.570057463Z","created_by":"/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.3","empty_layer":true},{"created":"2021-04-14T23:14:29.753592791Z","created_by":"/bin/sh -c #(nop)  ENV PKG_RELEASE=1","empty_layer":true},{"created":"2021-04-14T23:14:36.703547664Z","created_by":"/bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 case \"$apkArch\" in         x86_64)             set -x             \u0026\u0026 KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             \u0026\u0026 apk add --no-cache --virtual .cert-deps                 openssl             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk del .cert-deps             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 hg clone https://hg.nginx.org/pkg-oss                 \u0026\u0026 cd pkg-oss                 \u0026\u0026 hg up ${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make all                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 apk add --no-cache curl ca-certificates     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d"},{"created":"2021-04-14T23:14:36.967039881Z","created_by":"/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "},{"created":"2021-04-14T23:14:37.154007452Z","created_by":"/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "},{"created":"2021-04-14T23:14:37.345349498Z","created_by":"/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "},{"created":"2021-04-14T23:14:37.550999676Z","created_by":"/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "},{"created":"2021-04-14T23:14:37.738145043Z","created_by":"/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]","empty_layer":true},{"created":"2021-04-14T23:14:37.906240579Z","created_by":"/bin/sh -c #(nop)  EXPOSE 80","empty_layer":true},{"created":"2021-04-14T23:14:38.081931431Z","created_by":"/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT","empty_layer":true},{"created":"2021-04-14T23:14:38.270015592Z","created_by":"/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]","empty_layer":true},{"created":"2021-05-11T08:20:42.655041256Z","created_by":"LABEL maintainer=Jones MAGLOIRE @Joxit","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-05-11T08:20:42.655041256Z","created_by":"WORKDIR /usr/share/nginx/html/","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-05-11T08:20:42.655041256Z","created_by":"ENV NGINX_PROXY_HEADER_Host=$http_host","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-05-11T08:20:42.655041256Z","created_by":"COPY nginx/default.conf /etc/nginx/conf.d/default.conf # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-05-11T08:20:42.760641981Z","created_by":"COPY bin/entrypoint /docker-entrypoint.d/90-docker-registry-ui.sh # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-05-11T08:20:42.861255866Z","created_by":"COPY dist/ /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-05-11T08:20:42.989335066Z","created_by":"COPY favicon.ico /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:b2d5eeeaba3a22b9b8aa97261957974a6bd65274ebd43e1d81d0a7b8b752b116","sha256:ed3fe3f2b59f88def4ef31f4020793e2dc613571bebd4e8ee1241185fd2e6945","sha256:4531e200ac8d238b1f09c9b6f6aa2283532ec011de255b28cce9cf4aabf758f0","sha256:3c369314e0038454cd2849c5efac02812cea5a3b575f4e74cf6a9d1790360b24","sha256:3480549413ea041ba4a469d540b4bd3fe579029098f0a02038c0d1f4f0c25bdf","sha256:4689e8eca613fc415093e337de5d9194fbe1f767cc474f07b73ff08d2efcdac0","sha256:466e34b6d1f771b1d41d194693314871bd73c9deea7284f7f5fd7d93d718b0b4","sha256:34d28b0ee3937ccb3addb1bf350264856057fa7d28b99ac79f446bc7bb943b8d","sha256:b22546bc179ebd2b84b547399b0db451849eca6a07cebc2433882448161e2a20","sha256:d32dfc1bf3a9907a3ff5770973d1c7d85a7c2e735532aebccc9df3997c74cd7d"]}}