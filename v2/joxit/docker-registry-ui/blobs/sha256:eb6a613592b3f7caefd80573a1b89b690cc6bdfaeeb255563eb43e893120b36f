{"architecture":"amd64","config":{"Hostname":"","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"80/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.17.1","NJS_VERSION=0.3.3","PKG_RELEASE=1"],"Cmd":null,"ArgsEscaped":true,"Image":"sha256:b759eda422f951f008f8cdb2a185b935fc69e884341476013f6bedd7705b05b9","Volumes":null,"WorkingDir":"/usr/share/nginx/html/","Entrypoint":["/bin/sh","-c","entrypoint"],"OnBuild":null,"Labels":{"maintainer":"Jones MAGLOIRE @Joxit"},"StopSignal":"SIGTERM"},"container":"52ea88c544906a0b2d09ce7fdaded0572f910a2aeed6131bbc3fd49df8fc46f0","container_config":{"Hostname":"52ea88c54490","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"ExposedPorts":{"80/tcp":{}},"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.17.1","NJS_VERSION=0.3.3","PKG_RELEASE=1"],"Cmd":["/bin/sh","-c","#(nop) ","ENTRYPOINT [\"/bin/sh\" \"-c\" \"entrypoint\"]"],"ArgsEscaped":true,"Image":"sha256:b759eda422f951f008f8cdb2a185b935fc69e884341476013f6bedd7705b05b9","Volumes":null,"WorkingDir":"/usr/share/nginx/html","Entrypoint":["/bin/sh","-c","entrypoint"],"OnBuild":null,"Labels":{"maintainer":"Jones MAGLOIRE @Joxit"},"StopSignal":"SIGTERM"},"created":"2019-07-04T21:44:03.370991392Z","docker_version":"18.03.1-ee-3","history":[{"created":"2019-05-11T00:07:03.358250803Z","created_by":"/bin/sh -c #(nop) ADD file:a86aea1f3a7d68f6ae03397b99ea77f2e9ee901c5c59e59f76f93adbb4035913 in / "},{"created":"2019-05-11T00:07:03.510395965Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2019-05-11T00:34:31.960743548Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","empty_layer":true},{"created":"2019-07-01T21:26:21.674133093Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_VERSION=1.17.1","empty_layer":true},{"created":"2019-07-01T21:26:21.930512702Z","created_by":"/bin/sh -c #(nop)  ENV NJS_VERSION=0.3.3","empty_layer":true},{"created":"2019-07-01T21:26:22.278007808Z","created_by":"/bin/sh -c #(nop)  ENV PKG_RELEASE=1","empty_layer":true},{"created":"2019-07-01T21:26:30.199328737Z","created_by":"/bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 case \"$apkArch\" in         x86_64)             set -x             \u0026\u0026 KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             \u0026\u0026 apk add --no-cache --virtual .cert-deps                 openssl             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 printf \"%s%s%s\\n\"                 \"https://nginx.org/packages/mainline/alpine/v\"                 `egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release`                 \"/main\"             | tee -a /etc/apk/repositories             \u0026\u0026 apk del .cert-deps             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 hg clone https://hg.nginx.org/pkg-oss                 \u0026\u0026 cd pkg-oss                 \u0026\u0026 hg up ${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make all                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 echo \"${tempDir}/packages/alpine/\" \u003e\u003e /etc/apk/repositories             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             ;;     esac     \u0026\u0026 apk add --no-cache $nginxPackages     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 sed -i '$ d' /etc/apk/repositories     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log"},{"created":"2019-07-01T21:26:30.422945005Z","created_by":"/bin/sh -c #(nop)  EXPOSE 80","empty_layer":true},{"created":"2019-07-01T21:26:30.606629118Z","created_by":"/bin/sh -c #(nop)  STOPSIGNAL SIGTERM","empty_layer":true},{"created":"2019-07-01T21:26:30.75419594Z","created_by":"/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]","empty_layer":true},{"created":"2019-07-02T21:20:39.519058104Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=Jones MAGLOIRE @Joxit","empty_layer":true},{"created":"2019-07-02T21:20:39.806019081Z","created_by":"/bin/sh -c #(nop) WORKDIR /usr/share/nginx/html/","empty_layer":true},{"created":"2019-07-04T21:44:01.708963265Z","created_by":"/bin/sh -c #(nop) COPY file:1421e2061f95dd96c590ac56cfe5af7fb2c8c86fb2a5f1a63048b314f6742648 in /etc/nginx/conf.d/default.conf "},{"created":"2019-07-04T21:44:02.27093014Z","created_by":"/bin/sh -c #(nop) COPY dir:4ea7e8c242cf49437c1fcc1e85d41cdeb1e4e8efdc796b8bb0b3487c43ac4ad6 in /usr/share/nginx/html/ "},{"created":"2019-07-04T21:44:02.693754528Z","created_by":"/bin/sh -c #(nop) COPY file:4e1e045dc8dee46da2aa2c141b4b79768b9d7232c6b34ad800aec6f0c561f30a in /usr/share/nginx/html/scripts/docker-registry-ui.js "},{"created":"2019-07-04T21:44:03.112344661Z","created_by":"/bin/sh -c #(nop) COPY file:67844eb22eb9595bbbb48c26fafb50b9afdf6f53f3bafeb144ed5f730837184a in /bin "},{"created":"2019-07-04T21:44:03.370991392Z","created_by":"/bin/sh -c #(nop)  ENTRYPOINT [\"/bin/sh\" \"-c\" \"entrypoint\"]","empty_layer":true}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81","sha256:fbe0fc9bcf957b9f2fb457e000fc38004fec4e698ad393e6974d334dc65b03d7","sha256:61a83f70143dd35225b48f83242804057d65594175605e8e59cf2a5687e4a66b","sha256:8c70594a97ffc677a76b1750570e23884715c3736d40c1bc24fbfed6655b86b3","sha256:e2ec962ce9cd5167274d9bde3778dea73aae729558d54aefa6bd0f4a3560277e","sha256:8736b82f69691e216cb8ac7d84e6fdad14490262af7253463fe599e7a63880a2"]}}