{"architecture":"386","config":{"ExposedPorts":{"80/tcp":{}},"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.21.0","NJS_VERSION=0.5.3","PKG_RELEASE=1","NGINX_PROXY_HEADER_Host=$http_host"],"Entrypoint":["/docker-entrypoint.sh"],"Cmd":["nginx","-g","daemon off;"],"WorkingDir":"/usr/share/nginx/html/","Labels":{"maintainer":"Jones MAGLOIRE @Joxit"},"StopSignal":"SIGQUIT","OnBuild":null},"created":"2021-06-23T18:52:25.145809202Z","history":[{"created":"2021-04-14T18:38:29.292352815Z","created_by":"/bin/sh -c #(nop) ADD file:36634145ad6ec95a6b1a4f8d875f48719357c7a90f9b4906f8ce74f71b28c19d in / "},{"created":"2021-04-14T18:38:29.505849381Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2021-04-15T03:11:12.399726918Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","empty_layer":true},{"created":"2021-05-25T15:44:36.99064127Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.0","empty_layer":true},{"created":"2021-05-25T15:44:37.222253884Z","created_by":"/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.3","empty_layer":true},{"created":"2021-05-25T15:44:37.469226378Z","created_by":"/bin/sh -c #(nop)  ENV PKG_RELEASE=1","empty_layer":true},{"created":"2021-05-25T15:49:01.97773166Z","created_by":"/bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             \u0026\u0026 apk add --no-cache --virtual .cert-deps                 openssl             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk del .cert-deps             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 hg clone https://hg.nginx.org/pkg-oss                 \u0026\u0026 cd pkg-oss                 \u0026\u0026 hg up ${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make all                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 apk add --no-cache curl ca-certificates     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d"},{"created":"2021-05-25T15:49:02.302172217Z","created_by":"/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "},{"created":"2021-05-25T15:49:02.528887897Z","created_by":"/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "},{"created":"2021-05-25T15:49:02.765102382Z","created_by":"/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "},{"created":"2021-05-25T15:49:03.367201199Z","created_by":"/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "},{"created":"2021-05-25T15:49:03.566507819Z","created_by":"/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]","empty_layer":true},{"created":"2021-05-25T15:49:03.800650539Z","created_by":"/bin/sh -c #(nop)  EXPOSE 80","empty_layer":true},{"created":"2021-05-25T15:49:04.041503645Z","created_by":"/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT","empty_layer":true},{"created":"2021-05-25T15:49:04.286077156Z","created_by":"/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]","empty_layer":true},{"created":"2021-06-23T18:52:25.074680143Z","created_by":"LABEL maintainer=Jones MAGLOIRE @Joxit","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-06-23T18:52:25.074680143Z","created_by":"WORKDIR /usr/share/nginx/html/","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-06-23T18:52:25.074680143Z","created_by":"ENV NGINX_PROXY_HEADER_Host=$http_host","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-06-23T18:52:25.074680143Z","created_by":"COPY nginx/default.conf /etc/nginx/conf.d/default.conf # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-06-23T18:52:25.098018483Z","created_by":"COPY bin/entrypoint /docker-entrypoint.d/90-docker-registry-ui.sh # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-06-23T18:52:25.118998642Z","created_by":"COPY dist/ /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-06-23T18:52:25.145809202Z","created_by":"COPY favicon.ico /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:89fd7fc5cd2bd0a1bb5318d5ca2cd6f4bc4370ddd5ee18af87cda16c99a88016","sha256:aae271a01c04392501f9f8d002dbe2f9a7c67a7984f02702b22f63235623e010","sha256:c42ed1ca8c99f9df06d51626dc5a0ff5ac73352fc70ef562f3c626b76c832df7","sha256:d36f4a2245d9ed8514e3097e696d2b59f87e20a754cf1b32990df28ab1c90d12","sha256:1b3c7afb3d414633868f7cd00da016e45344b61855d7c9bce3444c97aad8cc0b","sha256:27ca4311ec270d15ac981ce3a020332f7d2a9ed560cc7071b36bc4b78a9db4a3","sha256:4abca875f91db80f6d50acedcc063af55318d3b87c7999599a061848911f6f78","sha256:837b5c2df674b9c64e474027557c5fa69a16491163405238ec78288db43befee","sha256:9a93e3762e63c2bb0f0c1a884ad146dba791202c419c37d525d37059521c067d","sha256:9058bb8a278b4915fb9049a4019e6085c5ffc8987d2335e742998ba799d5f631"]}}