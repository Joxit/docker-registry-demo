{"architecture":"arm","config":{"ExposedPorts":{"80/tcp":{}},"Env":["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin","NGINX_VERSION=1.21.0","NJS_VERSION=0.5.3","PKG_RELEASE=1","NGINX_PROXY_HEADER_Host=$http_host"],"Entrypoint":["/docker-entrypoint.sh"],"Cmd":["nginx","-g","daemon off;"],"WorkingDir":"/usr/share/nginx/html/","Labels":{"maintainer":"Jones MAGLOIRE @Joxit"},"StopSignal":"SIGQUIT","OnBuild":null},"created":"2021-06-23T18:52:22.805572259Z","history":[{"created":"2021-06-15T22:57:34.671548554Z","created_by":"/bin/sh -c #(nop) ADD file:4479f0a51530e039edf231d87201896dcff908aa542a613cdccb015f93dda8a3 in / "},{"created":"2021-06-15T22:57:34.875786882Z","created_by":"/bin/sh -c #(nop)  CMD [\"/bin/sh\"]","empty_layer":true},{"created":"2021-06-16T11:25:56.025501066Z","created_by":"/bin/sh -c #(nop)  LABEL maintainer=NGINX Docker Maintainers \u003cdocker-maint@nginx.com\u003e","empty_layer":true},{"created":"2021-06-16T11:25:56.244565434Z","created_by":"/bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.0","empty_layer":true},{"created":"2021-06-16T11:25:56.535589537Z","created_by":"/bin/sh -c #(nop)  ENV NJS_VERSION=0.5.3","empty_layer":true},{"created":"2021-06-16T11:25:56.780134989Z","created_by":"/bin/sh -c #(nop)  ENV PKG_RELEASE=1","empty_layer":true},{"created":"2021-06-16T11:30:45.701298603Z","created_by":"/bin/sh -c set -x     \u0026\u0026 addgroup -g 101 -S nginx     \u0026\u0026 adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx     \u0026\u0026 apkArch=\"$(cat /etc/apk/arch)\"     \u0026\u0026 nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${PKG_RELEASE}     \"     \u0026\u0026 case \"$apkArch\" in         x86_64|aarch64)             set -x             \u0026\u0026 KEY_SHA512=\"e7fa8303923d9b95db37a77ad46c68fd4755ff935d0a534d26eba83de193c76166c68bfe7f65471bf8881004ef4aa6df3e34689c305662750c0172fca5d8552a *stdin\"             \u0026\u0026 apk add --no-cache --virtual .cert-deps                 openssl             \u0026\u0026 wget -O /tmp/nginx_signing.rsa.pub https://nginx.org/keys/nginx_signing.rsa.pub             \u0026\u0026 if [ \"$(openssl rsa -pubin -in /tmp/nginx_signing.rsa.pub -text -noout | openssl sha512 -r)\" = \"$KEY_SHA512\" ]; then                 echo \"key verification succeeded!\";                 mv /tmp/nginx_signing.rsa.pub /etc/apk/keys/;             else                 echo \"key verification failed!\";                 exit 1;             fi             \u0026\u0026 apk del .cert-deps             \u0026\u0026 apk add -X \"https://nginx.org/packages/mainline/alpine/v$(egrep -o '^[0-9]+\\.[0-9]+' /etc/alpine-release)/main\" --no-cache $nginxPackages             ;;         *)             set -x             \u0026\u0026 tempDir=\"$(mktemp -d)\"             \u0026\u0026 chown nobody:nobody $tempDir             \u0026\u0026 apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 perl-dev                 libedit-dev                 mercurial                 bash                 alpine-sdk                 findutils             \u0026\u0026 su nobody -s /bin/sh -c \"                 export HOME=${tempDir}                 \u0026\u0026 cd ${tempDir}                 \u0026\u0026 hg clone https://hg.nginx.org/pkg-oss                 \u0026\u0026 cd pkg-oss                 \u0026\u0026 hg up ${NGINX_VERSION}-${PKG_RELEASE}                 \u0026\u0026 cd alpine                 \u0026\u0026 make all                 \u0026\u0026 apk index -o ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz ${tempDir}/packages/alpine/${apkArch}/*.apk                 \u0026\u0026 abuild-sign -k ${tempDir}/.abuild/abuild-key.rsa ${tempDir}/packages/alpine/${apkArch}/APKINDEX.tar.gz                 \"             \u0026\u0026 cp ${tempDir}/.abuild/abuild-key.rsa.pub /etc/apk/keys/             \u0026\u0026 apk del .build-deps             \u0026\u0026 apk add -X ${tempDir}/packages/alpine/ --no-cache $nginxPackages             ;;     esac     \u0026\u0026 if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/abuild-key.rsa.pub\" ]; then rm -f /etc/apk/keys/abuild-key.rsa.pub; fi     \u0026\u0026 if [ -n \"/etc/apk/keys/nginx_signing.rsa.pub\" ]; then rm -f /etc/apk/keys/nginx_signing.rsa.pub; fi     \u0026\u0026 apk add --no-cache --virtual .gettext gettext     \u0026\u0026 mv /usr/bin/envsubst /tmp/         \u0026\u0026 runDeps=\"$(         scanelf --needed --nobanner /tmp/envsubst             | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }'             | sort -u             | xargs -r apk info --installed             | sort -u     )\"     \u0026\u0026 apk add --no-cache $runDeps     \u0026\u0026 apk del .gettext     \u0026\u0026 mv /tmp/envsubst /usr/local/bin/     \u0026\u0026 apk add --no-cache tzdata     \u0026\u0026 apk add --no-cache curl ca-certificates     \u0026\u0026 ln -sf /dev/stdout /var/log/nginx/access.log     \u0026\u0026 ln -sf /dev/stderr /var/log/nginx/error.log     \u0026\u0026 mkdir /docker-entrypoint.d"},{"created":"2021-06-16T11:30:46.050690021Z","created_by":"/bin/sh -c #(nop) COPY file:65504f71f5855ca017fb64d502ce873a31b2e0decd75297a8fb0a287f97acf92 in / "},{"created":"2021-06-16T11:30:46.271877903Z","created_by":"/bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b03c4e6c8c513ae014f691fb05d530257dfffd07035c1b75da in /docker-entrypoint.d "},{"created":"2021-06-16T11:30:46.496753508Z","created_by":"/bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7de297435e32af634f29f7132ed0550d342cad9fd20158258 in /docker-entrypoint.d "},{"created":"2021-06-16T11:30:46.755522803Z","created_by":"/bin/sh -c #(nop) COPY file:09a214a3e07c919af2fb2d7c749ccbc446b8c10eb217366e5a65640ee9edcc25 in /docker-entrypoint.d "},{"created":"2021-06-16T11:30:46.99997927Z","created_by":"/bin/sh -c #(nop)  ENTRYPOINT [\"/docker-entrypoint.sh\"]","empty_layer":true},{"created":"2021-06-16T11:30:47.256262487Z","created_by":"/bin/sh -c #(nop)  EXPOSE 80","empty_layer":true},{"created":"2021-06-16T11:30:47.49946588Z","created_by":"/bin/sh -c #(nop)  STOPSIGNAL SIGQUIT","empty_layer":true},{"created":"2021-06-16T11:30:47.748029563Z","created_by":"/bin/sh -c #(nop)  CMD [\"nginx\" \"-g\" \"daemon off;\"]","empty_layer":true},{"created":"2021-06-23T18:52:22.759185538Z","created_by":"LABEL maintainer=Jones MAGLOIRE @Joxit","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-06-23T18:52:22.759185538Z","created_by":"WORKDIR /usr/share/nginx/html/","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-06-23T18:52:22.759185538Z","created_by":"ENV NGINX_PROXY_HEADER_Host=$http_host","comment":"buildkit.dockerfile.v0","empty_layer":true},{"created":"2021-06-23T18:52:22.759185538Z","created_by":"COPY nginx/default.conf /etc/nginx/conf.d/default.conf # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-06-23T18:52:22.773827375Z","created_by":"COPY bin/entrypoint /docker-entrypoint.d/90-docker-registry-ui.sh # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-06-23T18:52:22.788835733Z","created_by":"COPY dist/ /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"},{"created":"2021-06-23T18:52:22.805572259Z","created_by":"COPY favicon.ico /usr/share/nginx/html/ # buildkit","comment":"buildkit.dockerfile.v0"}],"os":"linux","rootfs":{"type":"layers","diff_ids":["sha256:130a7f3d750c51aa80125958033880c84af03205296337d9b0a38146709b7217","sha256:e9199de650c93307b99ff7fab31ffdc6c7b1c021744be1b6d322adb83901bef8","sha256:c7c0941abe471d6fb6188ee89524ebfb945f94ff3cfe8b9aed2f9fc2533d3146","sha256:6904d7db7611652725848a6119765f24ce5afc8bfcdb1db37defea6787540996","sha256:9485b1de6e7645e5c637198c8b7e3a22cf48ee94bc4df583e850cdf1232ea139","sha256:08ee3126aef45700701a18c4aeee41273101ae64ce7e379c826aaa82ab97aba8","sha256:947c053ff64e04b5a91f89a3a3a87f16f5d89a97eb62bdffa276dc7392b7c294","sha256:4c991af720ca00510ef2c03ed796e9cf649834f2b92ef30e0b9bb8f2b15b40ba","sha256:8c6159f0a428d1bd8051bd3a6a3c228da37c653eafc0b6704509bb8b5aff3e6f","sha256:d26fe3c376e4997e3c03d348e4af5eda9cd0ecf400665d21522adbe293464618"]},"variant":"v6"}